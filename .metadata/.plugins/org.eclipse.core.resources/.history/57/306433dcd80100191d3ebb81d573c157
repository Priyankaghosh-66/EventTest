package com.spring.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.password.PasswordEncoder;



public class UserDetailsServiceSecurity implements UserDetailsService{
	
	@Autowired
	private com.spring.service.UserProService userService;

	@Autowired
	PasswordEncoder passwordEncoder;

	@Override
	public UserDetails loadUserByUsername(String username)
			throws UsernameNotFoundException {
		User user = null;
		User activeUser = (User) SecurityContextHolder.getContext()
				.getAuthentication().getPrincipal();
		if (activeUser != null) {

			user = userService.getUser(emailId);
			if (user.getIs_valid_user() == 1) {
				if (activeUser.getParent_email_id() == null) {
					user.setCheckNormalLogin(false);
					if (!user.getParent_email_id()
							.equals(activeUser.getEmail())) {

						throw new UsernameNotFoundException(
								"You are not authorized user ");
					}
				} else {

					if (!emailId.equals(activeUser.getParent_email_id())) {
						throw new UsernameNotFoundException(
								"You are not authorized user ");
					}
				}
			} else {
				throw new UsernameNotFoundException(
						ErrorConstant.YOUR_MAILID_NOT_CHECKED);
			}

		} else {
			throw new UsernameNotFoundException(
					"Please login then try to access ");
		}
		if (user == null) {
			throw new UsernameNotFoundException(
					"User details not found with this username: " + emailId);
		}

		return user;

	}

}
