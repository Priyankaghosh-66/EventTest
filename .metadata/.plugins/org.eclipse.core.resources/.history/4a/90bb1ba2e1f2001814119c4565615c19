package com.spring.beas.dao.impl;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import org.springframework.orm.ObjectRetrievalFailureException;

import com.spring.beas.dao.BaseDao;
import com.spring.beas.model.BaseDomain;

public class BaseDaoImpl <T extends BaseDomain> implements BaseDao<T>{
	
	@PersistenceContext
    private EntityManager entityManager;
    private final Class<T> prototype;
    private final String entityName;
    
    public BaseDaoImpl(Class<T> prototype, String entityName) {
        this.prototype = prototype;
        this.entityName = entityName;
    }


	
	
	
	protected final T newPrototype(Class<T> cl) throws IllegalArgumentException {
        try {
            return cl.newInstance();
        } catch (InstantiationException e) {
            throw new IllegalArgumentException(e);
        } catch (IllegalAccessException e) {
            throw new IllegalArgumentException(e);
        }
    }

    public EntityManager getEntityManager() {
         
        return entityManager;
    }





	public T save(T entity) {
		// TODO Auto-generated method stub
		return null;
	}





	public T loadById(Long entityId) throws ObjectRetrievalFailureException {
		// TODO Auto-generated method stub
		return null;
	}





	public List<T> loadAll() {
		// TODO Auto-generated method stub
		return null;
	}





	public void delete(T entity) {
		T loadedEntity = loadById(entity.getId());
        entityManager.remove(loadedEntity);
		
	}


}
