<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	
     <context:component-scan base-package="com" >
    </context:component-scan>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <sec:global-method-security jsr250-annotations="enabled" secured-annotations="enabled" pre-post-annotations="enabled"/>
    
    <!-- Resources do not need security -->
    <sec:http pattern="/resource/**" security="none" />
    <sec:http pattern="/finalUpload/**" security="none" />
  <sec:http pattern="/favicon.ico" security="none" />       
    <sec:http pattern="/mobile/*" security="none" />  
    
    <sec:authentication-manager alias="userAuthenticationManager">
		<sec:authentication-provider ref="userAuthenticationProvider"/>
	</sec:authentication-manager> 
	
   <bean id="userAuthenticationProvider" class="com.spring.security.UserAuthenticationProvider"/>
   
   <bean id="userDetailsService" class="com.spring.security.UserDetailsServiceSecurity"/>
   
   
   <bean id="switchUserProcessingFilter" class="org.springframework.security.web.authentication.switchuser.SwitchUserFilter">
   <property name="userDetailsService" ref="userDetailsService" />
   <property name="switchUserUrl" value="/user/j_spring_security_switch_user" />
    <property name="switchFailureUrl" value="/user/?error" />
   
    <property name="exitUserUrl" value="/user/j_spring_security_exit_user" />
    <property name="targetUrl" value="/user/"/>
 </bean>
 


	 <!--  ***************************user section  start*********************************************-->
    
    <sec:http auto-config="true" use-expressions="true" pattern="/user/**" authentication-manager-ref="userAuthenticationManager">
 
		<sec:intercept-url pattern="/user/" requires-channel="https" access="permitAll"/> 
 		<sec:intercept-url pattern="/user/index" access="hasRole('ROLE_USER')" requires-channel="https" />
 		<sec:intercept-url pattern="/user/**"  access="hasRole('ROLE_USER')" requires-channel="https" />
 		
 		
       
		<!-- access denied page -->
	 <sec:access-denied-handler error-page="/403" /> 
	<!-- 	<sec:access-denied-handler error-page="/user/" /> -->
 
		<sec:form-login 
		    login-page="/user/" 
		    default-target-url="/user/landing" 
		     login-processing-url="/user/j_spring_security_check"
		    always-use-default-target="true"
			authentication-failure-url="/user/?error" 
			username-parameter="email"
			password-parameter="password"
			/>
			
			
			
		
		<sec:logout logout-url="/user/j_spring_security_logout" logout-success-url="/user?logout" delete-cookies="JSESSIONID"/>
		
		<!-- Session Fixation Attack Protection -->
		<sec:session-management session-fixation-protection="migrateSession">
			<sec:concurrency-control max-sessions="3" error-if-maximum-exceeded="false" expired-url="/sessionExpired"/>
		</sec:session-management>
		
		<!-- enable csrf protection -->
	 	 <sec:csrf    />  
	  <sec:custom-filter ref="switchUserProcessingFilter" position="SWITCH_USER_FILTER"/>
		
	</sec:http>
	 <!--  *************************** user section  end*********************************************-->
	 
	  <!--  *************************** admin section  start*********************************************-->
	 <sec:http auto-config="true" use-expressions="true" pattern="/admin/**" disable-url-rewriting="true" authentication-manager-ref="userAuthenticationManager">
 
		<sec:intercept-url pattern="/admin/" requires-channel="https" access="permitAll"/> 
 		<sec:intercept-url pattern="/admin/**"  access="hasRole('ROLE_ADMIN')" requires-channel="https" />
 		
		<!-- access denied page -->
		<sec:access-denied-handler error-page="/403" />
	<!-- 	<sec:access-denied-handler error-page="/admin/" /> -->
 
		<sec:form-login 
		    login-page="/admin/" 
		    default-target-url="/admin/landing" 
		    login-processing-url="/admin/j_spring_security_check"
		     always-use-default-target="true"
			authentication-failure-url="/admin/?error" 
			username-parameter="email"
			password-parameter="password"
			/>
			
		
			
		<sec:logout logout-url="/admin/j_spring_security_logout" logout-success-url="/admin?logout" delete-cookies="JSESSIONID"/>
		
		<!-- Session Fixation Attack Protection -->
		<sec:session-management session-fixation-protection="migrateSession">
			<sec:concurrency-control max-sessions="3" error-if-maximum-exceeded="false" expired-url="/admin/sessionExpired"/>
		</sec:session-management>
		
		<!-- enable csrf protection -->
	 	 <sec:csrf />  
	
	</sec:http> 
	<!--  *************************** admin section end *********************************************-->

	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <sec:authentication-manager>
	    <sec:authentication-provider ref="userAuthenticationProvider"/>
	    <!-- <sec:authentication-provider ref="adminAuthenticationProvider"/> -->
	</sec:authentication-manager>
	
	<!--  <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://192.168.1.8:3306/etDB"/>
        <property name="username" value="root"/>
        <property name="password" value="beasroot123"/>
    </bean>	 --> 
    <context:property-placeholder location="classpath:database.properties" /> 
     <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>	
    
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
		<!-- <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
			</props>
		</property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.spring.model.UserProfile</value>
				<value>com.spring.model.RoleMaster</value>
				<value>com.spring.model.UserRoleMapping</value>
			</list>
        </property>
		<property name="packagesToScan" value="*.*">
		 </property>
    </bean>
     
   
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
   
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="520000000"/>
    </bean> -->
	

	<bean id="userProDao" class="com.spring.dao.impl.UserProDAOImpl">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
    
 </beans>